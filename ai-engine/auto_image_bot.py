        
import os
import random
import requests
from PIL import Image, ImageDraw, ImageFont
from io import BytesIO

def download_random_image():
    try:
        search_urls = [
            "https://source.unsplash.com/800x600/?animal",
            "https://source.unsplash.com/800x600/?dog",
            "https://source.unsplash.com/800x600/?bird",
            "https://source.unsplash.com/800x600/?nature,animal",
            "https://source.unsplash.com/800x600/?wildlife"
        ]
        url = random.choice(search_urls)
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            image = Image.open(BytesIO(response.content)).convert("RGB")
            filename = "images/ai/auto_" + str(random.randint(1000, 9999)) + ".jpg"
            image.save(filename)
            return filename
        else:
            print("‚ö†Ô∏è Failed to fetch image.")
    except Exception as e:
        print("‚ùå Error fetching image:", e)
    return None

def overlay_slogan(image_path, slogan):
    try:
        image = Image.open(image_path).convert("RGB")
        draw = ImageDraw.Draw(image)
        font_path = "/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf"
        font_size = int(image.width / 18)

        try:
            font = ImageFont.truetype(font_path, font_size)
        except:
            font = ImageFont.load_default()

        text_width, text_height = draw.textsize(slogan, font=font)
        x = (image.width - text_width) // 2
        y = image.height - text_height - 40

        for dx in range(-2, 3):
            for dy in range(-2, 3):
                draw.text((x+dx, y+dy), slogan, font=font, fill="black")

        draw.text((x, y), slogan, font=font, fill="white")
        image.save(image_path)

    except Exception as e:
        print("‚ùå Error overlaying slogan:", e)

if __name__ == "__main__":
    slogans = [
        "‡§™‡•ç‡§∞‡•á‡§Æ ‡§π‡•Ä ‡§∏‡§ö‡•ç‡§ö‡•Ä ‡§∏‡•á‡§µ‡§æ ‡§π‡•à üêæ",
        "‡§ú‡•Ä‡§µ‡•ã‡§Ç ‡§∏‡•á ‡§ï‡§∞‡•ã‡§Ç ‡§™‡•ç‡§Ø‡§æ‡§∞, ‡§ú‡•Ä‡§µ‡§® ‡§π‡•ã‡§ó‡§æ ‡§â‡§¶‡•ç‡§ß‡§æ‡§∞ ‚ù§Ô∏è",
        "‡§Æ‡•Ç‡§ï ‡§ú‡•Ä‡§µ‡•ã‡§Ç ‡§ï‡•Ä ‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡§∞‡•á‡§Ç üå±",
        "‡§™‡§∞‡§ø‡§Ç‡§¶‡•ã‡§Ç ‡§ï‡•ã ‡§™‡§æ‡§®‡•Ä ‡§¶‡•á‡§Ç, ‡§™‡•Å‡§£‡•ç‡§Ø ‡§ï‡§Æ‡§æ‡§è‡§Ç üïäÔ∏è",
        "‡§≠‡•Ç‡§ñ‡•á ‡§ï‡•Å‡§§‡•ç‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§≠‡•ã‡§ú‡§®, ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§ß‡§∞‡•ç‡§Æ üôè",
        "‡§ú‡§π‡§æ‡§Å ‡§¶‡§Ø‡§æ ‡§π‡•à, ‡§µ‡§π‡•Ä‡§Ç ‡§à‡§∂‡•ç‡§µ‡§∞ ‡§π‡•à üåº"
    ]

    slogan = random.choice(slogans)
    downloaded_image = download_random_image()

    if downloaded_image:
        overlay_slogan(downloaded_image, slogan)
        print(f"‚úÖ Done: {downloaded_image}")
    else:
        print("‚ö†Ô∏è No image processed.")
